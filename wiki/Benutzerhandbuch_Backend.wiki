#summary Benutzerhandbuch für das Verplan Backend
#sidebar Sidebar

= Einleitung =

In dieser Anleitung findest du alle wichtigen Informationen, die du brauchst, um einen Vertretungsplan hochzuladen oder das Programm vom Backend aus zu verwalten. Falls du ein Problem hast, schau doch mal im [FAQ FAQ] nach. Das Backend ist der Administratorbereich des Programms. 

<wiki:toc max_depth="3" />

= Begriffe =

*Geltungsdatum* - Datum, für das die Vertretungen gelten

*Stand* - Datum und Zeit, zu der der Vertretungsplan erstellt wurde

= Vertretungsplan hochladen =

Es gibt zurzeit drei verschiedenen Möglichkeiten, einen Vertretungsplan hochzuladen. Die [#keine_Vertretungen erste Möglichkeit] ist keine Daten hochzuladen, weil es keine Vertretungen gibt. Als [#eine_beliebige_Datei zweites] kann jede beliebige Datei hochgeladen werden. Im Frontend wird dann ein Link auf diese Datei angezeigt. Diese Möglichkeit ist für den Fall der Fälle da, wenn ein normaler Upload nicht funktioniert oder ein entsprechendes Dateiformat nicht vorhanden ist. Die [#Datenbank dritte Möglichkeit] ist, die Daten einer Datei in die Datenbank eintragen zu lassen. Auf die Daten des Vertretungsplanes kann dann über eine Tabelle im Frontend zugegriffen werden. 

Die einzelnen Arten lassen sich nicht auswählen, sondern werden einzeln erkannt, nachdem die Daten abgeschickt wurden. Die Daten werden mit einem Klick auf "Abschicken" gesendet. 

== keine Vertretungen ==

Trage bitte das Geltungsdatum und den Stand ein, lasse aber die Datei leer. Das Datum sollte jeweils das Format 'YYYY-MM-DD' haben. Du kannst auch einfach auf das kleine Kalendericon rechts neben den Eingabefeldern klicken. Dann öffnet sich ein Kalender. 

Meldung: `Senden erfolgreich, ohne DB, keine Vertretungen`

== eine beliebige Datei  ==

Hier werden im Prinzip alle Dateitypen unterstützt. Bitte bedenke doch, dass die Benutzer nicht alle Dateitypen öffnen können. Empfehlenswert sind: _htm, html, pfd, png, jpg, bmp, gif, txt, doc und xls_

Meldung: `Senden erfolgreich, ohne DB`

== Datenbank ==

Wenn du die Daten in die Datenbank eintragen möchtest, dann lade einfach eine Unterstützte Datei hoch. Die Daten für den Stand, das Geltungsdatum und die Vertretungsplandaten selber sollten dann automatisch erkannt werden. 

Zurzeit werden nur gp-untis Dateien erkannt, welche mit dem Info-Stundenplan Modul exportiert wurden. XML Dateien werden noch nicht unterstützt. 

Meldung: `Senden und parsen erfolgreich`

= Optionen =

Hier kannst du einstellen, wie der Upload geschehen soll. *Ajax* sogt dafür, dass die Seite nicht neu geladen wird, wenn Einstellungen geändert werden. Normalerweise muss Ajax nicht abgeschaltet werden. Mit der Einstellung *Debug* kann man sich genau zeigen lassen, was nach dem Klick auf "Abschicken" passiert. Es ist eine Hilfe bei der Fehlererkennung und Beseitigung.

= Datenbank bereinigen =

hier lassen sich veraltete Datenbankeinträge und Dateien löschen. Normalerweise werden für jeden Upload die hochgeladenen Dateien und alle Daten gespeichert. Um Einträge zu löschen, musst du nur auf *"Datenbank bereinigen"* klicken. Vertretungspläne, die für die Zukunft gelten (Geltungsdatum > Jetzt), bleiben immer erhalten und werden nicht mitgezählt. 

= Parameter/ Einstellungen =

Parameter sind Einstellungen (Settings), die für das Programm gelten. Einige gelten für das backend, andere für das Frontend. Die [Optionen Option Ajax] gilt auch für das Speichern dieser Daten. 

Nachdem du hier etwas geändert hast, musst du auf *"Speichern"* klicken, damit die Einstellungen übernommen werden und nicht verloren gehen.

== version ==
Version der Webapplication. Dieser Wert sollte normalerweise nicht geändert werden müssen und wird automatisch gesetzt, wenn das Backend aufgerufen wird.

== max_file_size ==
Maximale Dateigröße eines Uploads in Byte. Dieser Wert muss nur höher gesetzt werden, wenn sich eine Datei nicht hochladen lässt. 

== allowed_filetypes ==
Dateien mit diesen Endungen dürfen hochgeladen werden. 

== pattern_stand ==
Regulärer Ausdruck in PHP, der aus der hochgeladenen gp-Units Datei den Stand sucht. Normalerweise sollte sich dieser Ausdruck nicht ändern. Es kann jedoch erforderlich werden, den Ausdruck zu ändern, wenn sich die Exportdatei ändert. 
Weitere Informationen: [http://php.net/manual/en/book.regex.php]

== format_stand ==
Dieser Ausdruck ist wichtig, damit der String mit dem Stand korrekt in ein Datum umgewandelt wird. Weitere Informationen: [http://php.net/manual/en/function.date-parse-from-format.php]

== pattern_date ==
Mit diesem Ausdruck wird der Datumsstring aus der Datei gesucht. 
Dieser Ausdruck ist ähnlich einem regulären Ausdruck, doch man erhält direkten Zugriff auf das DOM. Dieser Ausdruck funktioniert mit dem [http://jacksleight.com/old/code JS_extractor Plugin]. 

Weitere Informationen: [http://jacksleight.com/old/blog/tags/js-extractor], [http://uk2.php.net/dom]

== format_date ==
Siehe [#format_stand] nur nicht für den Stand, sondern das Geltungsdatum.

== pattern_date ==
Siehe [#fpattern_date]. Dieses Mal wird die Tabelle mit den Vertretungen gesucht. 

== upload_dir_comp ==
Verzeichnis, in das die Vertretungsplandateien geladen werden, ausgehend von: `/administrator/componentes/com_verplan/`. Die URL bezieht sich auf den Server. 

== upload_dir ==
Verzeichnis, in dem die Vertretungspläne liegen, auf die auch vom Frontend aus zugegriffen werden kann, ausgehend vom Webseiten Stammverzeichnis. Die URL bezieht sich auf die Webadresse. 

== number_show ==
Anzahl der in der Auswahlliste im Frontend anzuzeigenden Daten. Daten in der Zukunft werden immer zusätztlich angezeigt und zählen nicht mit zu dieser Zahl. 

== load_jquery und load_jqueryui ==
Einstellung, ob die Javascriptbibliothek [http://jquery.com/ jQuery]  bzw deren Oberflächenbibliothek [http://jqueryui.com/ jQueryUI] geladen werden soll. Normalerweise sollte dies aktiviert bleiben, außer, wenn jQuery anders geladen wird. Das Programm verwendet den [http://docs.jquery.com/Using_jQuery_with_Other_Libraries jQuery noConflict mode]. 

== debug ==
Mit dieser Einstellung lässt sich der Debugmode im Frontend an und ausschalten. Der Debugmode ermöglicht es, über eine JS Konsole (wie z.B.  in [http://getfirebug.comn Firebug]) das Programm zu überwachen. Normalerweise sollte dieser ausgeschaltet sein um Ressourcen zu sparen und die Sicherheit zu erhöhen. Sollte es Probleme mit JS geben, lassen diese sich schneller finden, wenn der Debugmode aktiv ist.

== class_col ==
Hier sollte der Name der Spalte stehen, in der die Klassen stehen. Es geht um den Titel der Spalte im Tabellenkopf. 

== class_name ==
Hier geht es um den Namen der Datenspalte mit den Klassen, wie er auch in der Datenbank vorkommt und wie er auch in der JSON Datei vorkommt. 

== notify ==
Auswahl des Notification (Benachrichtigungs) System. Es stehen mein eigenes own und das [http://pines.svn.sourceforge.net/viewvc/pines/sandbox/notify/notify.html pnotify] zur Auswahl.

= Spalten =

Hier lassen sich alle Einstellungen der Spalten der Vertretungsplantabelle des Frontends verändern. Die Spalten kommen auch so in der Datenbank vor.  Wenn du hier etwas geändert hast, musst du die Änderungen speichern. Entweder die Spalte einzeln mit einem Klick auf *"Speichern"* ganz rechts in der Zeile oder *"alle speichern"* unter der Tabelle. Wenn etwas geändert wurde, wird die entsprechende Zeile in der Tabelle eingefärbt. Mit einem Klick auf *"reset"* können die Änderungen rückgängig gemacht werden. 

Die einzelnen Spalten lassen sich sortieren, indem man auf den Titel in der Tabelle klickt. 

Hier eine kurze Erläuterung der einzelnen Einstellungen:

  * *id* - Nummer der Spalte; kann nicht bearbeitet werden
  * *name* - Name, wie er auch in der Datenbank vorkommt; sollte nicht geändert werden
  * *ordering* - Nummer für die Sortierung. Je kleiner die zahl ist, desto weiter links erscheint die Spalte
  * *published* - 1->Spalte wird angezeigt; 0-> Spalte wird ausgeblendet
  * *label* - Spaltentitel, wie er in der Tabelle erscheint
  * *description* - Kurze Beschreibung, die beim überfahren mit dem Cursor erscheint (im Frontend)
  * *Speichern* - Speichern und zurücksetzen der Änderungen

== Sortierung verändern ==

Das verändern der Sortierung/ Reihenfolge der Spalten im Frontend über das Backend ist nicht immer ganz einfach. Normalerweise sollte man versuchen, die Zahlen in einer aufsteigenden Reihenfolge einzutragen. Dabei kann die Sortierfunktion sehr hilfreich sein, um z.B. die Spalten die angezeigt werden, von denen zu trennen, die nicht angezeigt werden. Wichtig ist es, alle Änderungen zu speichern!

Hast du einen Reihenfolge aufgestellt kann es sein, dass Lücken entstanden sind. Hier hilft die Funktion *"Sortierung neu aufbauen"*. Diese sogt dafür, dass jede zahl nur einmal vorkommt und setzt die zahlen so, dass keine Lücken mehr vorhanden sind. Ein Beispiel:

  *Vor dem neu Aufbauen: 1,2,3,6,7,99,345
  *Nach dem neu Aufbauen: 1,2,3,4,5,6,7

Wichtig: bevor du die Sortierung neu aufbaust, solltest du die Änderungen speichern.

= About =
Daten und Info zum und über das Programm.