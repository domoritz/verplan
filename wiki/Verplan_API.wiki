#summary Vertretungsplan API

= Einleitung =
Hier erfährst du, wie die Vertretungsplandaten übertragen werden. Die Daten können entweder innerhalb des Programms oder sogar außerhalb verwendet werden. Es ist nur möglich auf die Daten zuzugreifen, wenn man die entsprechenden Berechtigungen hat. 

Über die API sind die Vertretungsplandaten (Datum, Stand, Lehrer usw.) erreichbar und können dann verwendet werden. Das Vertretungsplanprogramm verwendet intern diese Schnittstelle um die Daten per AJAX laden zu können. 

<wiki:toc max_depth="3" />

= API =
= Zugang zur API =
== URL ==
Die Daten des Vertretungsplanes sind über folgende URL errichbar
{{{
<JOOMLA_URL>/index.php?option=com_verplan&view=data&format=json&date=<DATUM>&stand=<STAND>&options=<MODEL>,<VIEW>
}}}

== Erklärung ==
Hier eine Erklärung der einzelnen Elemente:

*<JOOMLA_URL>* 
URL des Joomlaverzeichnisses der Website. 

*<DATUM>* 
Datum, für das die Vertretungen gesucht werden (Geltungsdatum). Bitte das Format beachten. z.B. _2009-09-24_. Wird nicht das gesamte Datum eingegeben, werden alle Daten angezeigt, deren Datum mit der Zeichenkette beginnt. _2009-09_ Gilt also für den gesamten September 2009. 

*<STAND>*
Ähnlich wie `<DATUM>`, betrifft jedoch das Erstellungdatum. Zusätzlich gibt es hier die Möglichkeit `latest` anzugeben. damit werden nur Daten mit dem neuesten Stand ausgegeben.

*<MODEL>*
Optionen für das Model, also welche Daten angezeigt werden. Es sind folgende Optionen möglich:

  * nichts angeben - Alle Zeilen werden ausgegeben, bei denen die Daten mit dem eingegebenen Datum und dem Stand übereinstimmen. Es werden nicht alle Spalten angezeigt (nicht alle Daten zu den einzelnen Vertretungen), sondern nur die, die auch im Backend festgelegt wurden. 
  * *all* - Alle Spalten werden angezeigt (auch solche, die vom Backend aus ausgeblendet wurden)
  * *none* - Es werden alle Daten (Info und Columns), bis auf die Vertretungsplandaten (Rows) übergeben
  * *cols* - Es werden nur die Spalte ausgegeben. Dabei werden nur die Spalten angezeigt, die wirklich angezeigt werden sollen und diese auch in der richtigen Reihenfolge.  

Code: plan.php (Controller Frontend)

*<VIEW>*
Solltest du nur diese Option verwenden, schreibe trotzdem das Komma!

Optionen für das View, also wie die Daten ausgegeben werden. Es sind folgende Optionen möglich:

  * nichts angeben - Ausgabe als JSON, formatiert
  * *arr* - Ausgabe des Arrays mit [http://php.net/manual/en/function.var-dump.php var_dump], zu Debug-Zwecken
  * *html* - JSON mit HTML formatiert, zu Debug-Zwecken
  * *min* - Ausgabe als JSON ohne Zeilenumbrüche und Einrückungen. 

[http://www.json.org/ Was ist JSON?]

Code: default_json.php

= Die Daten =
Die zurückgegebene Datei besteht aus drei Elementen, `infos`, `cols` und `rows`. 

Ein Beispiel mit der Option (in `<VIEW>`): `arr`. 

{{{
array
  'infos' => 
    array
      0 => 
        array
          'id' => string '27' (length=2)
          'timestamp' => string '2009-12-19 16:57:47' (length=19)
          'Geltungsdatum' => string '2009-11-27 00:00:00' (length=19)
          'Stand' => string '2009-11-26 10:31:00' (length=19)
          'type' => string 'db' (length=2)
          'url' => string '/workspace/Joomla 1.6 Core/administrator/components/com_verplan/uploads/20091219_1658_vertretungsplan.htm' (length=105)
      1 => 
        array
          'id' => string '41' (length=2)
          'timestamp' => string '2009-12-19 19:32:29' (length=19)
          'Geltungsdatum' => string '2009-11-27 00:00:00' (length=19)
          'Stand' => string '2009-11-26 10:31:00' (length=19)
          'type' => string 'db' (length=2)
          'url' => string '/workspace/Joomla 1.6 Core/administrator/components/com_verplan/uploads/20091219_1932_vertretungsplan.htm' (length=105)
      2 => 
        array
          'id' => string '42' (length=2)
          'timestamp' => string '2009-12-19 19:32:35' (length=19)
          'Geltungsdatum' => string '2009-11-27 00:00:00' (length=19)
          'Stand' => string '2009-11-26 10:31:00' (length=19)
          'type' => string 'db' (length=2)
          'url' => string '/workspace/Joomla 1.6 Core/administrator/components/com_verplan/uploads/20091219_1932_vertretungsplan.htm' (length=105)
  'cols' => 
    array
      '(Klasse(n))' => 
        array
          'id' => string '6' (length=1)
          'name' => string '(Klasse(n))' (length=11)
          'ordering' => string '0' (length=1)
          'published' => string '1' (length=1)
          'label' => string '' (length=0)
          'description' => string '' (length=0)
      'Stunde' => 
        array
          'id' => string '7' (length=1)
          'name' => string 'Stunde' (length=6)
          'ordering' => string '0' (length=1)
          'published' => string '1' (length=1)
          'label' => string '' (length=0)
          'description' => string '' (length=0)
      '(Fach)' => 
        array
          'id' => string '8' (length=1)
          'name' => string '(Fach)' (length=6)
          'ordering' => string '0' (length=1)
          'published' => string '1' (length=1)
          'label' => string '' (length=0)
          'description' => string '' (length=0)
      'Fach' => 
        array
          'id' => string '9' (length=1)
          'name' => string 'Fach' (length=4)
          'ordering' => string '0' (length=1)
          'published' => string '1' (length=1)
          'label' => string '' (length=0)
          'description' => string '' (length=0)
      'id' => 
        array
          'id' => string '1' (length=1)
          'name' => string 'id' (length=2)
          'ordering' => string '1' (length=1)
          'published' => string '1' (length=1)
          'label' => string 'ID' (length=2)
          'description' => string 'Fortlaufende Nummer' (length=19)
  'rows' => 
    array
      0 => 
        array
          '(Klasse(n))' => string '7e' (length=2)
          'Stunde' => string '5' (length=1)
          '(Fach)' => string 'De' (length=2)
          'Fach' => string 'Ge' (length=2)
          'id' => string '475' (length=3)
      1 => 
        array
          '(Klasse(n))' => string '10d' (length=3)
          'Stunde' => string '7' (length=1)
          '(Fach)' => string 'Bio' (length=3)
          'Fach' => string '---' (length=3)
          'id' => string '474' (length=3)
      2 => 
        array
          '(Klasse(n))' => string '10d' (length=3)
          'Stunde' => string '6' (length=1)
          '(Fach)' => string 'Bio' (length=3)
          'Fach' => string 'Sp' (length=2)
          'id' => string '473' (length=3)
      3 => 
        array
          '(Klasse(n))' => string '13a' (length=3)
          'Stunde' => string '7' (length=1)
          '(Fach)' => string 'GKMu' (length=4)
          'Fach' => string '---' (length=3)
          'id' => string '472' (length=3)
      4 => 
        array
          '(Klasse(n))' => string '13a' (length=3)
          'Stunde' => string '8' (length=1)
          '(Fach)' => string 'GKMu' (length=4)
          'Fach' => string '---' (length=3)
          'id' => string '471' (length=3)
      [...]
      88 => 
        array
          '(Klasse(n))' => string '10d' (length=3)
          'Stunde' => string '7' (length=1)
          '(Fach)' => string 'Bio' (length=3)
          'Fach' => string '---' (length=3)
          'id' => string '624' (length=3)
      89 => 
        array
          '(Klasse(n))' => string '7e' (length=2)
          'Stunde' => string '5' (length=1)
          '(Fach)' => string 'De' (length=2)
          'Fach' => string 'Ge' (length=2)
          'id' => string '625' (length=3)


}}}

Hier eine kurze Erklärung der Unterarrays
  * *infos* - Allgemeine Infos zu den Daten unterteilt in die verschiedenen Uploads
  * *cols* - Informationen der Spalten
  * *rows* - Informationen der Zeilen (der einzelnen Vertretungen)

= Woher kommen die Daten? =
Die URL, welche aufgerufen wird, zeigt das View `data` angezeigt. Durch `format=json` wird dafür gesorgt, dass die JSON-Daten ohne Template angezeigt werden. Es wird die Datei `views/data/view.json.php` angezeigt, welche das Template `views/data/tmpl/default` lädt. Die Daten, die hier angezeigt werden, werden wiederum über den Controller `plan` und das Model `plan` aus der Datenbank geladen. 

Eine Übersicht über die PHP-Klassen gibt es hier: [overview_frontend]